version: 2.1

orbs:
    win: circleci/windows@4.1.1
    macos: circleci/macos@2.2.0

jobs:
    linux-gcc:
        docker:
            - image: cimg/base:current-22.04
        environment:
            CC: gcc-12
            CXX: g++-12
        steps:
            - checkout
            - run:
                  name: Install Software
                  command: |
                      sudo apt-get update
                      sudo apt-get install -y ninja-build git unzip cmake g++-12 libstdc++-12-dev 
                      git clone --quiet --depth=1 https://github.com/Microsoft/vcpkg.git
                      pushd "$HOME"
                      cd vcpkg
                      ./bootstrap-vcpkg.sh --disableMetrics
                      vcpkg install zstd
                      vcpkg install zeromq
                      popd 
                      set -e
                      BUILD_DIR=${1:-build}
                      VCPKG_DIR="$HOME/vcpkg"
                      # only pass toolchain file to CMake if Vcpkg is installed
                      if [[ -d "$VCPKG_DIR" ]]; then TOOLCHAIN="$VCPKG_DIR/scripts/buildsystems/vcpkg.cmake"; else TOOLCHAIN=False; fi
                      mkdir "$BUILD_DIR"
                      git submodule init && git submodule update --depth=1
                      cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DVCPKG_LIBRARY_LINKAGE=static -DCMAKE_TOOLCHAIN_FILE="$TOOLCHAIN" -DUSE_SANITIZER=address -B "$BUILD_DIR"
                      cmake --build "$BUILD_DIR" --config Release --target install  -j 


    # linux-clang-libcpp:
    #     docker:
    #         - image: cimg/base:current-22.04
    #     environment:
    #         CC: clang-16
    #         CXX: clang++-16
    #         CXXFLAGS: -stdlib=libc++
    #     steps:
    #         - checkout
    #         - run:
    #               name: Install Software
    #               command: |
    #                   sudo apt-get update
    #                   sudo apt-get install -y ninja-build git unzip cmake clang-16 libc++-16-dev libc++abi-16-dev
    #         - run: /bin/bash .ci/install-vcpkg.sh
    #         - run: /bin/bash .ci/build-project.sh
    #         - run: ./build/src/show_info/show_info
    #         - run: ./build/src/example/example
    #         - run: ctest --output-on-failure --output-junit test-results.xml --test-dir build
    #         - store_test_results:
    #               path: build/test-results.xml

    # linux-clang-libstdcpp:
    #     docker:
    #         - image: cimg/base:current-22.04
    #     environment:
    #         CC: clang-16
    #         CXX: clang++-16
    #         CXXFLAGS: -stdlib=libstdc++
    #     steps:
    #         - checkout
    #         - run:
    #               name: Install Software
    #               command: |
    #                   sudo apt-get update
    #                   sudo apt-get install -y ninja-build git unzip cmake clang-16 libc++-16-dev libc++abi-16-dev libstdc++-16-dev

workflows:
    version: 2
    run-all:
        jobs:
            - linux-gcc
            # - linux-clang-libcpp
            # - linux-clang-libstdcpp
            # - mac-gcc
            # - mac-clang-libcpp
            # - mac-clang-libstdcpp
            # - windows-msvc
            # - windows-clang-cl